Git is a distributed version control system used for tracking changes in source code during software development.

Remote Repository:

A remote repository is a Git repository hosted on a remote server or a code hosting platform like GitHub, GitLab, or Bitbucket.
It acts as a centralized location for collaborating changes from multiple developers, where multiple developers can push and pull changes to keep the repository in sync.
We can not make any changes directly to a remote repository and a valid user with proper access can push changes to remote repo from only local repo.
Local Repository:

A local repository is a copy of a Git repository that resides on your local machine.
It contains the complete copy of the repo repository, including all branches, commits, files etc.
The local repository allows you to make changes, commit them, switch between branches, and perform Git operations without needing a live network connection to remote repo.
You can create a local repository by initialising a new repository with git init or cloning an existing repository using git clone.
 
 #To get a local repo / to download/clone a remote repo 
     git clone <url_of_the_remote_repository>


git architecture



git status

The git status command in Git shows the current state of your working directory and staging area. It helps you to track changes and know which files are modified, staged for commit, or untracked. Here's an overview of the possible outputs:

Untracked files: Files that aren't being tracked by Git.
Changes not staged for commit: Files that have been modified but not yet added to the staging area.
Changes to be committed: Files that are staged and ready to be committed.
Branch information: It may also show which branch you're currently on and if you're ahead or behind any remote branch.
git log

git log is used to view all commits history of a Git repository.
It displays a list of commits starting from the most recent commit on top.
The commit history provides essential information about the changes made to the repository such as, 
     commit messages, authors, dates, and unique identifiers (commit hash/id).
git add

Adds changes to the staging area.
This is where you can review your changes before committing them to your local repository.
 # Add all changes to the staging area
   git add .   (OR)   git add --all
   
   git add -A is equivalent to git add --all
   git add -u is equivalent to git add --update
   
   NOTE: Extra information just in case you want to try but not required
   Command            New-Files        Modified-Files    Deleted-Files                                         Description
     git add --all            YES                          YES                      YES                       Stage all (new, modified, deleted) files
     git add .                 YES                          YES                      YES                       Stage all (new, modified, deleted) files in current folder
     git add -u                NO                          YES                      YES                       Stage modified and deleted files only
       
git commit 

Create a new commit containing the current changes of the stagging area (added files and directories)
We need to give a commit message which we can see in the git log message describing the changes. 
 # Commit the changes with a message
     git commit -m "Added new feature"
     
git push

git push is a command used to push your local committed changes (after git add and git commit) to a remote repository.
When you make changes to your local repository and want to share them with others or synchronize them with a remote repository 
   (such as on GitHub, GitLab, or Bitbucket), you use git push to send those changes to the remote repository.
 
git pull

git pull is a command used to fetch and merge changes from a remote repository into your local repository.
When others push changes to the remote repository, you can use git pull to update your local repository to get new commits from the remote repository.
